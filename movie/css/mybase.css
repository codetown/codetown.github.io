body {
    margin: 0;
    padding: 0;
    min-height:100vh;
}
a{
    text-decoration: none;
    color:#999;
}
.cate-card {
    box-shadow: 0px 0px 4px 1px rgba(0, 0, 0, 0.1);
    background-color: rgb(255, 255, 255);
    border: 1px rgb(229, 231, 235) solid;
    border-radius: 0.5rem;
    padding: 24px;
    display: flex;
    flex-direction: column;
}

.cate-card>img {
    width: 100%;
    border-radius: 0.5rem;
    overflow: hidden;
    object-fit: cover;
    display: block;
    margin-bottom: 0.5rem;
}

.cate-card>h3 {
    margin: 0 0 0.5rem 0;
}

.cate-card>p {
    margin: 0 0 1rem 0;
    color: rgb(120, 113, 108);
}

.cate-card>a {
    margin-top: auto;
    border-radius: 0.5rem;
    background-color: rgb(245, 245, 244);
    display: inline-block;
    padding: 0.5rem 1rem;
    text-decoration: none;
    cursor: pointer;
    user-select: none;
    color: rgb(28, 25, 23);
    width: fit-content;
}

.app-card {
    overflow: hidden;
    color: rgb(9, 9, 11);
    background-color: rgb(255, 255, 255);
    border: 1px rgb(229, 231, 235) solid;
    box-shadow: 0px 0px 4px 1px rgba(0, 0, 0, 0.1);
    transition-duration: 0.15s;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    border-radius: 8px;
    transform: matrix(1, 0, 0, 1, 0, 0);
    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
    display: flex;
    flex-direction: column;
}

.app-card>img {
    width: 100%;
    display: block;
    margin-bottom: 0.25rem;
}

.app-card>strong {
    padding: 8px 16px;
    display: block;
    font-size: 1.125rem;
}

.app-card>p {
    padding: 0 1rem;
    font-size: 0.875rem;
    line-height: 1.25rem;
    margin: 0;
    color: rgb(120, 113, 108);
}

.app-card>span {
    display: block;
    padding: 0.875rem 1rem;
    margin-top: auto;
}

.app-card>span>a {
    padding-top: 0.5rem;
    padding-bottom: 0.5rem;
    padding-left: 1rem;
    padding-right: 1rem;
    background-color: black;
    border-radius: 0.375rem;
    color: white;
    cursor: pointer;
    display: inline-block;
    user-select: none;
}

.app-card>span>a:hover {
    background-color: grey;
}

.container {
    width: calc(100% - 48px);
    margin-right: auto;
    margin-left: auto;
    padding:0 24px;
}

.gutter-grid {
    margin-bottom: 48px;
    display: grid;
    column-gap: 24px;
    row-gap: 24px;
}

.price-card {
    position: relative;
    box-shadow: 0px 0px 4px 1px rgba(0, 0, 0, 0.1);
    background-color: rgb(255, 255, 255);
    border: 1px rgb(229, 231, 235) solid;
    border-radius: 0.5rem;
    overflow: hidden;
    padding-bottom: 8px;
}

.price-card>h3 {
    margin-top: 0;
    margin-bottom: 4px;
    padding: 0 12px;
}

.price-card>p {
    margin-top: 0;
    margin-bottom: 4px;
    display: flex;
    align-items: center;
    padding: 0 12px;
    font-size: 14px;
    color: #999;
}

.price-card>p>svg {
    width: 16px;
    margin-right: 4px;
}

.price-card .price-number {
    margin-right: auto;
    font-size: 18px;
    color: #999900;
}

.asset-viewer {
    position: relative;
    margin-bottom: 6px;
}

.asset-viewer>img {
    width: 100%;
    height: 160px;
    display: block;
    margin: 0;
}

.asset-viewer>a {
    text-decoration: none;
    position: absolute;
    bottom: 100%;
    left: 0;
    right: 0;
    display: flex;
    align-items: center;
    justify-content: center;
    width: 100%;
    height: 100%;
    color: #fff;
}

.asset-viewer:hover>a {
    top: 0;
    bottom: 0;
    background: rgba(0, 0, 0, .1);
    backdrop-filter: blur(6px);
}

.blue-button {
    font-family: inherit;
    font-size: 100%;
    padding: 0.5em 1em;
    border: none rgba(0, 0, 0, 0);
    background-color: #0078e7;
    color: #fff;
    text-decoration: none;
    border-radius: 6px;
    cursor: pointer;
}

.blue-button:hover,
.blue-button:focus {
    background-image: linear-gradient(transparent, rgba(0, 0, 0, 0.05) 40%, rgba(0, 0, 0, 0.10));
}

.blue-button:focus {
    outline: 0;
}

.blue-button:active {
    box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.15) inset, 0 0 6px rgba(0, 0, 0, 0.20) inset;
    border-color: #000;
}

.blue-button[disabled] {
    border: none;
    background-image: none;
    opacity: 0.40;
    cursor: not-allowed;
    box-shadow: none;
    pointer-events: none;
}
.search-input {
    font-size: 0.875rem;
    line-height: 1.25rem;
    padding-right: 1rem;
    padding-left: 2.5rem;
    padding-top: 0.5rem;
    padding-bottom: 0.5rem;
    padding-left: 0.75rem;
    padding-right: 0.75rem;
    background-color:transparent;
    border-color: #f2f2ff;
    border-width: 1px;
    border-radius: 9999px;
    width: 100%;
    height: 2.5rem;
    display: flex;
}

button {
    /* Structure */
    display: inline-block;
    line-height: normal;
    white-space: nowrap;
    vertical-align: middle;
    text-align: center;
    cursor: pointer;
    -webkit-user-drag: none;
    -webkit-user-select: none;
            user-select: none;
    box-sizing: border-box;
    font-family: inherit;
    font-size: 100%;
    padding: 0.5em 1em;
    color: rgba(0, 0, 0, 0.80);
    border: none rgba(0, 0, 0, 0);
    background-color: #E6E6E6;
    text-decoration: none;
    border-radius: 6px;
}

/* Firefox: Get rid of the inner focus border */
button::-moz-focus-inner {
    padding: 0;
    border: 0;
}

/* Inherit .g styles */
.button-group {
    letter-spacing: -0.31em; /* Webkit: collapse white-space between units */
    text-rendering: optimizespeed; /* Webkit: fixes text-rendering: optimizeLegibility */
}

.opera-only :-o-prefocus,
.button-group {
    word-spacing: -0.43em;
}

.button-group button {
    letter-spacing: normal;
    word-spacing: normal;
    vertical-align: top;
    text-rendering: auto;
}
button:hover,
button:focus {
    background-image: linear-gradient(transparent, rgba(0,0,0, 0.05) 40%, rgba(0,0,0, 0.10));
}
button:focus {
    outline: 0;
}
button:active {
    box-shadow: 0 0 0 1px rgba(0,0,0, 0.15) inset, 0 0 6px rgba(0,0,0, 0.20) inset;
    border-color: #000;
}

button[disabled] {
    border: none;
    background-image: none;
    opacity: 0.40;
    cursor: not-allowed;
    box-shadow: none;
    pointer-events: none;
}

button.primary,
button.elected,
a.button.primary,
a.button.selected {
    background-color: rgb(0, 120, 231);
    color: #fff;
}

/* Button Groups */
button-group button {
    margin: 0;
    border-radius: 0;
    border-right: 1px solid rgba(0, 0, 0, 0.2);

}

button-group button:first-child {
    border-top-left-radius: 2px;
    border-bottom-left-radius: 2px;
}
button-group button:last-child {
    border-top-right-radius: 2px;
    border-bottom-right-radius: 2px;
    border-right: none;
}

/***自适应和响应式开始***/
@media screen and (min-width: 576px) {
    .container {
        max-width: 540px;
    }

    .gutter-grid {
        grid-template-columns: repeat(2, calc(50% - 12px));
    }
}

@media screen and (min-width: 768px) {
    .container {
        max-width: 720px;
    }

    .gutter-grid {
        grid-template-columns: repeat(3, calc(33.3333% - 16px));
    }
}


@media screen and (min-width: 992px) {
    .container {
        max-width: 960px;
    }

    .gutter-grid {
        grid-template-columns: repeat(4, calc(25% - 18px));
    }
}

@media screen and (min-width: 1200px) {
    .container {
        max-width: 1140px;
    }

    .gutter-grid {
        grid-template-columns: repeat(4, calc(25% - 18px));
    }
}

@media screen and (min-width: 1400px) {
    .container {
        max-width: 1280px;
    }

    .gutter-grid {
        grid-template-columns: repeat(5, calc(20% - 19.2px));
    }
}

@media screen and (min-width: 1600px) {
    .container {
        max-width: 1440px;
    }

    .gutter-grid {
        grid-template-columns: repeat(5, calc(20% - 19.2px));
    }
}

/* 1920px 每行5个*/
@media screen and (min-width: 1920px) {
    .container {
        max-width: 1680px;
        /* 根据设计需求调整最大宽度 */
    }

    .gutter-grid {
        grid-template-columns: repeat(5, calc(20% - 19.2px));
    }
}

/* 2560px 每行8个*/
@media screen and (min-width: 2560px) {
    .container {
        max-width: 2400px;
        /* 根据设计需求调整最大宽度 */
    }

    .gutter-grid {
        grid-template-columns: repeat(8, calc(12.5% - 21px));
    }
}

/* 3840px 每行12个*/
@media screen and (min-width: 3840px) {
    .container {
        max-width: 3600px;
        /* 根据设计需求调整最大宽度 */
    }

    .gutter-grid {
        grid-template-columns: repeat(12, calc(8.3333% - 22px));
    }
}

/***自适应和响应式结束***/